@using CheckPointTravel.WebCore.Extensions
@using Umbraco.Web
@using CheckPointTravel.WebCore.Models.Media
@using System.Globalization
@using TeaCommerce.Umbraco.Web
@using TeaCommerce.Api.Models
@inherits Umbraco.Web.Mvc.UmbracoTemplatePage

@{
  var siteNode = Model.Content.GetSiteNode();
  int nodeLevel = Model.Content.Level;

  long storeId = Model.Content.GetPropertyValue<long>( "storeId", true );
  if ( storeId != 0 ) {
    LanguageService.Instance.ChangeCountry( storeId );
  }

  List<string> requiredCssFiles = CssService.Instance.GetCssForDocumentType( Model.Content );
  string requiredCss = HtmlService.Instance.GetCss( requiredCssFiles );

  //Country
  IPublishedContent country = Model.Content.AncestorOrSelf( "country" );
  string countryName = "";
  if ( country != null ) {
    //AncestorCountryName is used for the general country event cookie
    countryName = country.Name.Replace( "ø", "oe" ).Replace( "Ø", "Oe" ).Replace( "æ", "ae" ).Replace( "Æ", "Ae" ).Replace( "å", "aa" ).Replace( "Å", "Aa" );
  }
}

<!doctype html>
<html lang="@Html.GetTwoLetterIsoLanguageName()">
<head>
  <meta charset="utf-8">
  @Html.Partial( "SEO/ncSiteSeo" )

  <meta http-equiv="x-ua-compatible" content="ie=edge">
  <meta name="viewport" content="width=device-width,initial-scale=1">

  @Html.Raw( siteNode.GetVortoValue<string>( "scriptPageHeader" ) )
  @if ( nodeLevel > 1 ) {
    @Html.Raw( Model.Content.GetVortoValue<string>( "scriptPageHeader" ) )
  }

  <style type="text/css">
    @Html.Raw( requiredCss )
  </style>

  <link rel="shortcut icon" icon” href="/dist/images/gfx/favicon.ico" type="image/x-icon">
  <link rel="icon" href="/dist/images/gfx/favicon.ico" type="image/x-icon">

  <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
  <![endif]-->
  <!-- TrustBox script -->
  <script type="text/javascript" src="//widget.trustpilot.com/bootstrap/v5/tp.widget.bootstrap.min.js" async></script>
  <!-- End Trustbox script -->

  <script type="text/javascript">
    @* Minified Get cookie method *@
    function getCookie(t) { for (var n = t + "=", r = document.cookie.split(";"), e = 0; e < r.length; e++) { for (var i = r[e]; " " == i.charAt(0);)i = i.substring(1); if (0 == i.indexOf(n)) return i.substring(n.length, i.length) } return "" }
    @* Minified Set cookie with current country *@
    var countryName = "@countryName", cookieCountry = getCookie("country").replace("name=", ""); countryName || cookieCountry ? countryName && "" != countryName && countryName != cookieCountry && (document.cookie = "country=" + countryName + ";path=/") : document.cookie = "country=Intet land besøgt;path=/";
    var _mobileBreakpoint = 991;
  </script>

  <script type="text/javascript">
    var _storeId = @(storeId);
    var _culture = '@(CultureInfo.CurrentUICulture.Name)';
    var _contentId = @(Model.Content.Id);
    //Months array
    var _months = ["@Html.Raw(string.Join("\",\"", Model.CurrentCulture.DateTimeFormat.MonthNames))"];
    //Months
    var _january = '@Html.Raw(Model.CurrentCulture.DateTimeFormat.GetMonthName( 1 ))';
    var _february = '@Html.Raw(Model.CurrentCulture.DateTimeFormat.GetMonthName( 2 ))';
    var _march = '@Html.Raw(Model.CurrentCulture.DateTimeFormat.GetMonthName( 3 ))';
    var _april = '@Html.Raw(Model.CurrentCulture.DateTimeFormat.GetMonthName( 4 ))';
    var _may = '@Html.Raw(Model.CurrentCulture.DateTimeFormat.GetMonthName( 5 ))';
    var _june = '@Html.Raw(Model.CurrentCulture.DateTimeFormat.GetMonthName( 6 ))';
    var _july = '@Html.Raw(Model.CurrentCulture.DateTimeFormat.GetMonthName( 7 ))';
    var _august = '@Html.Raw(Model.CurrentCulture.DateTimeFormat.GetMonthName( 8 ))';
    var _septebmer = '@Html.Raw(Model.CurrentCulture.DateTimeFormat.GetMonthName( 9 ))';
    var _october = '@Html.Raw(Model.CurrentCulture.DateTimeFormat.GetMonthName( 10 ))';
    var _november = '@Html.Raw(Model.CurrentCulture.DateTimeFormat.GetMonthName( 11 ))';
    var _december = '@Html.Raw(Model.CurrentCulture.DateTimeFormat.GetMonthName( 12 ))';

    //Months three letters code
    var _jan = '@Html.Raw(Model.CurrentCulture.DateTimeFormat.GetAbbreviatedMonthName( 1 ))';
    var _feb = '@Html.Raw(Model.CurrentCulture.DateTimeFormat.GetAbbreviatedMonthName( 2 ))';
    var _mar = '@Html.Raw(Model.CurrentCulture.DateTimeFormat.GetAbbreviatedMonthName( 3 ))';
    var _apr = '@Html.Raw(Model.CurrentCulture.DateTimeFormat.GetAbbreviatedMonthName( 4 ))';
    var _may = '@Html.Raw(Model.CurrentCulture.DateTimeFormat.GetAbbreviatedMonthName( 5 ))';
    var _jun = '@Html.Raw(Model.CurrentCulture.DateTimeFormat.GetAbbreviatedMonthName( 6 ))';
    var _jul = '@Html.Raw(Model.CurrentCulture.DateTimeFormat.GetAbbreviatedMonthName( 7 ))';
    var _aug = '@Html.Raw(Model.CurrentCulture.DateTimeFormat.GetAbbreviatedMonthName( 8 ))';
    var _sep = '@Html.Raw(Model.CurrentCulture.DateTimeFormat.GetAbbreviatedMonthName( 9 ))';
    var _oct = '@Html.Raw(Model.CurrentCulture.DateTimeFormat.GetAbbreviatedMonthName( 10 ))';
    var _nov = '@Html.Raw(Model.CurrentCulture.DateTimeFormat.GetAbbreviatedMonthName( 11 ))';
    var _dec = '@Html.Raw(Model.CurrentCulture.DateTimeFormat.GetAbbreviatedMonthName( 12 ))';
  </script>

  @if ( Model.Content.IsExodusSite() ) {
    <style type="text/css">
      .travel-master .travel-navigation { background-color: #139da7 !important; }
      .travel-master .travel-navigation .navigation-content ul .menu-item.orderTravelExodus:not(.active) { background-color: #ea7721 !important; }
    </style>
  }
</head>
@* Remove "copy" from the DocumentTypeAlias. "Copy"-pages should use the same styling as their counterpart. E.g. weatherPageCopy -> weatherPage *@
<body vocab="https://schema.org" typeof="WebPage" class="@(((string)CurrentPage.DocumentTypeAlias()).Replace("Copy", "").Replace("Exodus", ""))">
  @Html.Partial( "SEO/ncSiteGoogleAnalytics" )
  @Html.Raw( siteNode.GetVortoValue<string>( "scriptPageBodyTop" ) )
  @if ( nodeLevel > 1 ) {
    @Html.Raw( Model.Content.GetVortoValue<string>( "scriptPageBodyTop" ) )
  }

  <!--[if lt IE 9]>
      <p class="browserupgrade">You are using an <strong>outdated</strong> browser. Please <a href="http://browsehappy.com/">upgrade your browser</a> to improve your experience.</p>
  <![endif]-->
  @Html.Partial( "Top" )

  @RenderBody()

  <!--[if lte IE 8]>
  <script defer charset="utf-8" type="text/javascript" src="//js.hsforms.net/forms/v2-legacy.js"></script>
  <![endif]-->
  <script defer charset="utf-8" type="text/javascript" src="//js.hsforms.net/forms/v2.js"></script>
  <script defer src="@Url.VersionedContent("~/dist/scripts/vendor."+(Request.Url.Host.EndsWith(".localhost") ? "source" : "min")+".js")"></script>
  <script defer src="@Url.VersionedContent("~/dist/scripts/master."+(Request.Url.Host.EndsWith(".localhost") ? "source" : "min")+".js")"></script>
  @Umbraco.RenderMacro( "FormsRenderScripts" )
  @Html.Raw( siteNode.GetVortoValue<string>( "scriptPageBodyBottom" ) )
  @if ( nodeLevel > 1 ) {
    @Html.Raw( Model.Content.GetVortoValue<string>( "scriptPageBodyBottom" ) )
  }

  <noscript id="deferred-styles">
    <link rel="stylesheet" href="@Url.VersionedContent("~/dist/css/master.min.css")">
  </noscript>
  <script>
    var loadDeferredStyles = function () {
      var addStylesNode = document.getElementById("deferred-styles");
      var replacement = document.createElement("div");
      replacement.innerHTML = addStylesNode.textContent;
      document.body.appendChild(replacement)
      addStylesNode.parentElement.removeChild(addStylesNode);
    };
    var raf = requestAnimationFrame || mozRequestAnimationFrame || webkitRequestAnimationFrame || msRequestAnimationFrame;
    if (raf) raf(function () { window.setTimeout(loadDeferredStyles, 0); });
    else window.addEventListener('load', loadDeferredStyles);
  </script>

  @{
    Umbraco.Web.Models.DynamicPublishedContentList employees = Umbraco.Content( 4266 ).Children();
  }

  <script>
    var images = document.getElementsByTagName('img');
    for (var i = 0; i < images.length; i++) {
      //Getting the element's position
      var image = images[i],
        position = image.getBoundingClientRect(),
        slider = getClosestAncestor(image, '.slider'),
        isSlider = !!slider,
        skipLoad = false;

      if (isSlider) {
        var slide = getClosestAncestor(image, '.slide');
        skipLoad = slider.children[0] !== slide;
      }

      //console.log('skipLoad: ', image, skipLoad);
      //Checking if the element's position is in the viewport and top of the page
      if (!skipLoad && image.classList.contains('lazyload') && position.top >= 0 && position.left >= 0 && window.pageYOffset < screen.height &&
        position.right <= (window.innerWidth || document.documentElement.clientWidth) &&
        position.bottom <= (window.innerHeight || document.documentElement.clientHeight)) {

        var sources = image.parentElement.getElementsByTagName('source');
        for (var j = 0; j < sources.length; j++) {
          setSrcAndSrcSet(sources[j])
        }

        setSrcAndSrcSet(image);
      }
    }

    function setSrcAndSrcSet(element) {
      var src = element.getAttribute('data-src');
      var srcSet = element.getAttribute('data-srcset');

      if (src != null) {
        element.setAttribute('src', src);
      }

      if (srcSet) {
        element.setAttribute('srcset', srcSet);
      }


      if (element.classList.contains('lazyload')) {
        element.classList.remove('lazyload');
        element.classList.add('lazyloaded');
      }
    }

    function getClosestAncestor(elem, selector) {

      // Element.matches() polyfill
      if (!Element.prototype.matches) {
        Element.prototype.matches =
          Element.prototype.matchesSelector ||
          Element.prototype.mozMatchesSelector ||
          Element.prototype.msMatchesSelector ||
          Element.prototype.oMatchesSelector ||
          Element.prototype.webkitMatchesSelector ||
          function (s) {
            var matches = (this.document || this.ownerDocument).querySelectorAll(s),
              i = matches.length;
            while (--i >= 0 && matches.item(i) !== this) { }
            return i > -1;
          };
      }

      // Get the closest matching element
      for (; elem && elem !== document; elem = elem.parentNode) {
        if (elem.matches(selector)) return elem;
      }
      return null;

    };
  </script>

  <script type="application/ld+json">
    {
    "@@context": "http://schema.org",
    "@@type": "TravelAgency",
    "description": "@Umbraco.GetDictionaryValue( "Master.MetaDescription" ) ",
    "name": "Checkpoint Travel",
    "image": "https://www.cpt.dk/media/1045/om-check-point-travel.jpg",
    "address": {
    "@@type": "PostalAddress",
    "addressCountry": "DK",
    "postalCode": "8220",
    "addressLocality": "Brabrand",
    "streetAddress": "Hovedgaden 54, 2.th"
    },
    "email": "cpt@cpt.dk",
    "telephone": "+4578760992",
    "openingHours": "Mo,Tu,We,Th,Fr 09:00-17:00",
    "priceRange": "$$$"

    @if ( employees.Any() ) {
      @Html.Raw( "," );
      @Html.Raw( "\"employees\": [" );
      foreach ( var employee in employees ) {
        @Html.Raw( "{" );
        @Html.Raw( "\"@type\":\"Person\"," );
        @Html.Raw( "\"email\":\"" + employee.GetPropertyValue<string>( "email" ) + "\"," );
        @Html.Raw( "\"telephone\":\"+45" + employee.GetPropertyValue<string>( "phoneNumber" ) + "\"," );
        @Html.Raw( "\"jobTitle\":\"Specialist\"," );
        @Html.Raw( "\"givenName\":\"" + employee.Name.Replace( "\"", "'" ) + "\"" );
        @Html.Raw( "}" );

        if ( employee != employees.Last() ) {
          @Html.Raw( "," );
        }
      }
      @Html.Raw( "]" );
    }

    }
  </script>

  @* Push order information to datalayer *@
  @{ Order order = storeId > 0 ? TC.GetCurrentFinalizedOrder( storeId ) : null; }
  @if ( order != null && order.Properties["googleAnalyticsTransaction"] != "true" ) {
    decimal totalPrice = order.TotalPrice.Value.WithVat + order.TotalPrice.GiftCardsAmount.Value;

    if ( order.OrderLines != null && order.OrderLines.Any() ) {
      <script type="text/javascript">
        var items = [];

        @foreach( OrderLine orderLine in order.OrderLines ) {
          <text>
            items.push({ id: '@orderLine.Sku', name: '@orderLine.Name', category: '@orderLine.Properties["category"]', price: @orderLine.UnitPrice.Value.WithVat.ToString( "0.##", CultureInfo.InvariantCulture ), quantity: @orderLine.Quantity.ToString( "0.#", CultureInfo.InvariantCulture ) });
          </text>
        }

        @if( order.TotalPrice.TotalDiscount.WithVat > 0M ) {
          <text>
            items.push({ id: 'Discount', name: 'Discount', category: 'Discount', price: '@(( order.TotalPrice.TotalDiscount.WithVat * -1 ).ToString( "0.##", CultureInfo.InvariantCulture ))', quantity: '1' });
          </text>
        }

        window.dataLayer = window.dataLayer || []
        dataLayer.push({
          'event': 'transaction',
          'transactionId': '@order.OrderNumber',
          'transactionTotal': @totalPrice.ToString( "0.##", CultureInfo.InvariantCulture ),
          'transactionTax': @order.TotalPrice.Value.Vat.ToString( "0.##", CultureInfo.InvariantCulture ),
          'destination': '@order.OrderLines[0].Properties["destination"]',
          'depMonth': '@order.OrderLines[0].Properties["depatureMonth"]',
          'durationoftravel': '@order.OrderLines[0].Properties["duration"]',
          'dayUntilDeparture': '@order.OrderLines[0].Properties["daysUntilDeparture"]',
          'adults': '@order.Properties["adults"]',
          'kids': '@order.Properties["children"]',
          'transactionProducts': items
        });
      </script>
      order.Properties.AddOrUpdate( "googleAnalyticsTransaction", "true" );
      order.Save();
    }
  }

</body>
</html>